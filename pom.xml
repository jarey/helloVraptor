<project xmlns="http://maven.apache.org/POM/4.0.0" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"
	xsi:schemaLocation="http://maven.apache.org/POM/4.0.0 http://maven.apache.org/xsd/maven-4.0.0.xsd">
	<name>Smart Clinic</name>
	<description>Projeto de Estudos de novas tecnologias</description>
	<modelVersion>4.0.0</modelVersion>
	<groupId>br.com.smartcoders</groupId>
	<artifactId>smartclinic</artifactId>
	<version>0.0.1-SNAPSHOT</version>
	<packaging>war</packaging>

	<!-- Shared version number properties -->
	<properties>
		<project.build.sourceEncoding>UTF-8</project.build.sourceEncoding>
		<project.reporting.outputEncoding>UTF-8</project.reporting.outputEncoding>
		<compiler.source>1.6</compiler.source>
		<compiler.target>1.6</compiler.target>
		<org.springframework.version>3.0.5.RELEASE</org.springframework.version>
		<cuke4duke.version>0.4.4</cuke4duke.version>
	</properties>

	<repositories>

		<repository>
			<id>codehaus</id>
			<url>http://repository.codehaus.org</url>
		</repository>
		<repository>
			<id>cukes</id>
			<url>http://cukes.info/maven</url>
		</repository>
		<repository>
			<id>JBoss</id>
			<name>jboss-maven2-release-repository</name>
			<url>https://oss.sonatype.org/content/repositories/JBoss</url>
		</repository>
	</repositories>

	<pluginRepositories>
		<pluginRepository>
			<id>cukes</id>
			<url>http://cukes.info/maven</url>
		</pluginRepository>
	</pluginRepositories>
	<profiles>
		<profile>
			<id>default</id>
			<activation>
				<activeByDefault>true</activeByDefault>
			</activation>
			<properties>
				<database.driver>org.hsqldb.jdbcDriver</database.driver>
				<database.url>jdbc:hsqldb:file:target/dbms/my-webapp-db</database.url>
				<database.username>sa</database.username>
				<database.password></database.password>
				<webdriver.impl.class>org.openqa.selenium.firefox.FirefoxDriver</webdriver.impl.class>
			</properties>
		</profile>
		<profile>
			<id>firefox</id>
			<properties>
				<webdriver.impl.class>org.openqa.selenium.firefox.FirefoxDriver</webdriver.impl.class>
			</properties>
		</profile>
		<profile>
			<id>htmlunit</id>
			<properties>
				<webdriver.impl.class>org.openqa.selenium.htmlunit.HtmlUnitDriver</webdriver.impl.class>
			</properties>
		</profile>
		<profile>
			<id>chrome</id>
			<properties>
				<webdriver.impl.class>org.openqa.selenium.chrome.ChromeDriver</webdriver.impl.class>
			</properties>
		</profile>
		<profile>
			<id>ie</id>
			<properties>
				<webdriver.impl.class>org.openqa.selenium.ie.InternetExplorerDriver</webdriver.impl.class>
			</properties>
		</profile>
	</profiles>
	<dependencies>
		<dependency>
			<groupId>commons-collections</groupId>
			<artifactId>commons-collections</artifactId>
			<version>3.2.1</version>
		</dependency>
		
		<dependency>
			<groupId>org.seleniumhq.selenium</groupId>
			<artifactId>selenium-java</artifactId>
			<version>2.0rc3</version>
		</dependency>

		<dependency>
			<groupId>cuke4duke</groupId>
			<artifactId>cuke4duke</artifactId>
			<version>${cuke4duke.version}</version>
			<scope>test</scope>
		</dependency>

		<dependency>
			<groupId>br.com.caelum</groupId>
			<artifactId>vraptor</artifactId>
			<version>3.3.1</version>
		</dependency>

		<dependency>
			<groupId>com.thoughtworks.xstream</groupId>
			<artifactId>xstream</artifactId>
			<version>1.3.1</version>
		</dependency>

		<dependency>
			<groupId>junit</groupId>
			<artifactId>junit</artifactId>
			<version>4.8.2</version>
		</dependency>

		<dependency>
			<groupId>javax.servlet.jsp.jstl</groupId>
			<artifactId>jstl-api</artifactId>
			<version>1.2</version>
		</dependency>

		<dependency>
			<groupId>jstl</groupId>
			<artifactId>jstl</artifactId>
			<version>1.2</version>
		</dependency>


		<!-- Core utilities used by other modules. Define this if you use Spring 
			Utility APIs (org.springframework.core.*/org.springframework.util.*) -->
		<dependency>
			<groupId>org.springframework</groupId>
			<artifactId>spring-core</artifactId>
			<version>${org.springframework.version}</version>
		</dependency>

		<!-- Expression Language (depends on spring-core) Define this if you use 
			Spring Expression APIs (org.springframework.expression.*) -->
		<dependency>
			<groupId>org.springframework</groupId>
			<artifactId>spring-expression</artifactId>
			<version>${org.springframework.version}</version>
		</dependency>

		<!-- Bean Factory and JavaBeans utilities (depends on spring-core) Define 
			this if you use Spring Bean APIs (org.springframework.beans.*) -->
		<dependency>
			<groupId>org.springframework</groupId>
			<artifactId>spring-beans</artifactId>
			<version>${org.springframework.version}</version>
		</dependency>

		<!-- Aspect Oriented Programming (AOP) Framework (depends on spring-core, 
			spring-beans) Define this if you use Spring AOP APIs (org.springframework.aop.*) -->
		<dependency>
			<groupId>org.springframework</groupId>
			<artifactId>spring-aop</artifactId>
			<version>${org.springframework.version}</version>
		</dependency>

		<!-- Application Context (depends on spring-core, spring-expression, spring-aop, 
			spring-beans) This is the central artifact for Spring's Dependency Injection 
			Container and is generally always defined -->
		<dependency>
			<groupId>org.springframework</groupId>
			<artifactId>spring-context</artifactId>
			<version>${org.springframework.version}</version>
		</dependency>

		<!-- Various Application Context utilities, including EhCache, JavaMail, 
			Quartz, and Freemarker integration Define this if you need any of these integrations -->
		<dependency>
			<groupId>org.springframework</groupId>
			<artifactId>spring-context-support</artifactId>
			<version>${org.springframework.version}</version>
		</dependency>

		<!-- Transaction Management Abstraction (depends on spring-core, spring-beans, 
			spring-aop, spring-context) Define this if you use Spring Transactions or 
			DAO Exception Hierarchy (org.springframework.transaction.*/org.springframework.dao.*) -->
		<dependency>
			<groupId>org.springframework</groupId>
			<artifactId>spring-tx</artifactId>
			<version>${org.springframework.version}</version>
		</dependency>

		<!-- JDBC Data Access Library (depends on spring-core, spring-beans, spring-context, 
			spring-tx) Define this if you use Spring's JdbcTemplate API (org.springframework.jdbc.*) -->
		<dependency>
			<groupId>org.springframework</groupId>
			<artifactId>spring-jdbc</artifactId>
			<version>${org.springframework.version}</version>
		</dependency>

		<!-- Object-to-Relation-Mapping (ORM) integration with Hibernate, JPA, 
			and iBatis. (depends on spring-core, spring-beans, spring-context, spring-tx) 
			Define this if you need ORM (org.springframework.orm.*) -->
		<dependency>
			<groupId>org.springframework</groupId>
			<artifactId>spring-orm</artifactId>
			<version>${org.springframework.version}</version>
		</dependency>

		<!-- Object-to-XML Mapping (OXM) abstraction and integration with JAXB, 
			JiBX, Castor, XStream, and XML Beans. (depends on spring-core, spring-beans, 
			spring-context) Define this if you need OXM (org.springframework.oxm.*) -->
		<dependency>
			<groupId>org.springframework</groupId>
			<artifactId>spring-oxm</artifactId>
			<version>${org.springframework.version}</version>
		</dependency>

		<!-- Web application development utilities applicable to both Servlet and 
			Portlet Environments (depends on spring-core, spring-beans, spring-context) 
			Define this if you use Spring MVC, or wish to use Struts, JSF, or another 
			web framework with Spring (org.springframework.web.*) -->
		<dependency>
			<groupId>org.springframework</groupId>
			<artifactId>spring-web</artifactId>
			<version>${org.springframework.version}</version>
		</dependency>

		<!-- Spring MVC for Servlet Environments (depends on spring-core, spring-beans, 
			spring-context, spring-web) Define this if you use Spring MVC with a Servlet 
			Container such as Apache Tomcat (org.springframework.web.servlet.*) -->
		<dependency>
			<groupId>org.springframework</groupId>
			<artifactId>spring-webmvc</artifactId>
			<version>${org.springframework.version}</version>
		</dependency>

		<!-- Spring MVC for Portlet Environments (depends on spring-core, spring-beans, 
			spring-context, spring-web) Define this if you use Spring MVC with a Portlet 
			Container (org.springframework.web.portlet.*) -->
		<dependency>
			<groupId>org.springframework</groupId>
			<artifactId>spring-webmvc-portlet</artifactId>
			<version>${org.springframework.version}</version>
		</dependency>
		<!-- Support for testing Spring applications with tools such as JUnit and 
			TestNG This artifact is generally always defined with a 'test' scope for 
			the integration testing framework and unit testing stubs -->
		<dependency>
			<groupId>org.springframework</groupId>
			<artifactId>spring-test</artifactId>
			<version>${org.springframework.version}</version>
			<scope>test</scope>
		</dependency>

		<dependency>
			<groupId>hibernate</groupId>
			<artifactId>hibernate</artifactId>
			<version>3.0.3</version>
			<scope>compile</scope>
		</dependency>
	</dependencies>

	<reporting>
		<plugins>
			<plugin>
				<groupId>org.apache.maven.plugins</groupId>
				<artifactId>maven-jxr-plugin</artifactId>
			</plugin>
			<plugin>
				<groupId>org.apache.maven.plugins</groupId>
				<artifactId>maven-javadoc-plugin</artifactId>
			</plugin>
			<plugin>
				<groupId>org.apache.maven.plugins</groupId>
				<artifactId>maven-checkstyle-plugin</artifactId>
			</plugin>
			<plugin>
				<groupId>org.apache.maven.plugins</groupId>
				<artifactId>maven-pmd-plugin</artifactId>
			</plugin>
		</plugins>
	</reporting>

	<build>
		<plugins>
			<plugin>
				<groupId>cuke4duke</groupId>
				<artifactId>cuke4duke-maven-plugin</artifactId>
				<version>${cuke4duke.version}</version>
				<configuration>
					<jvmArgs>
						<jvmArg>-Dlog4j.configuration=file:///${basedir}/target/test-classes/log4j.xml</jvmArg>
						<jvmArg>-Dcuke4duke.objectFactory=cuke4duke.internal.jvmclass.SpringFactory</jvmArg>
						<jvmArg>-Dcuke4duke.springXml=cucumber.xml</jvmArg>
						<jvmArg>-Xmx512m</jvmArg>
					</jvmArgs>
					<cucumberArgs>
						<cucumberArg>--color</cucumberArg>
						<cucumberArg>--verbose</cucumberArg>
						<cucumberArg>--strict</cucumberArg>
						<cucumberArg>--require</cucumberArg>
						<cucumberArg>${basedir}/target/test-classes</cucumberArg>
					</cucumberArgs>
					<gems>
						<gem>install cuke4duke --version ${cuke4duke.version}</gem>
					</gems>
				</configuration>
				<executions>
					<execution>
						<id>run-features</id>
						<phase>integration-test</phase>
						<goals>
							<goal>cucumber</goal>
						</goals>
					</execution>
				</executions>
			</plugin>
			<plugin>
				<artifactId>maven-compiler-plugin</artifactId>
				<version>2.3.2</version>
				<configuration>
					<source>${compiler.source}</source>
					<target>${compiler.target}</target>
				</configuration>
			</plugin>

			<plugin>
				<groupId>org.mortbay.jetty</groupId>
				<artifactId>jetty-maven-plugin</artifactId>
				<configuration>
					<webAppConfig>
						<contextPath>/smartclinic</contextPath>
					</webAppConfig>
					<scanIntervalSeconds>5</scanIntervalSeconds>
				</configuration>
			</plugin>

			<plugin>
				<groupId>org.codehaus.mojo</groupId>
				<artifactId>selenium-maven-plugin</artifactId>
				<version>1.1</version>
				<executions>
					<execution>
						<goals>
							<goal>start-server</goal>
						</goals>
						<phase>pre-integration-test</phase>
						<configuration>
							<logOutput>true</logOutput>
							<background>true</background>
						</configuration>
					</execution>
				</executions>
			</plugin>

		</plugins>
	</build>
</project>